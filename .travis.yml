# ----------------- BEGIN LICENSE BLOCK ---------------------------------
#
# Copyright (c) 2019 Intel Corporation
#
# SPDX-License-Identifier: LGPL-2.1-only
#
# ----------------- END LICENSE BLOCK -----------------------------------
##

language: cpp
compiler: gcc

os: linux
dist: xenial
sudo: false

git:
  submodules: false
env:
  global:
    - BUILDCMD="colcon build --packages-up-to ad_rss ad_rss_map_integration --cmake-args -DBUILD_HARDENING=ON -DBUILD_PYTHON_BINDING=ON -DCMAKE_BUILD_TYPE=Release && colcon test --packages-select ad_rss ad_rss_map_integration"

matrix:
  include:

    - env: TEST="Build and Unit Tests (Ubuntu 16.04)"
      addons:
        apt:
          packages:
            - cmake
            - build-essential
            - lcov
            - doxygen
            - graphviz
            - python3
            - python3-pip
            - python-pip
            - castxml
            - libboost-all-dev
            - libpugixml-dev
            - libproj-dev
            - libgtest-dev
      before_install:
        - git submodule update --init
        - pip3 install setuptools
        - pip2 install --user pygccxml https://bitbucket.org/ompl/pyplusplus/get/1.8.1.zip
      before_script:
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        - sudo apt-get update
        - sudo apt-get install python3-colcon-common-extensions
      script:
        - colcon build --executor sequential --packages-up-to ad_rss ad_rss_map_integration --cmake-args -DCMAKE_BUILD_TYPE=Release -DBUILD_HARDENING=ON
        - colcon build --executor sequential --packages-select ad_rss ad_rss_map_integration --cmake-args -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DBUILD_COVERAGE=ON
        - colcon test --packages-select ad_rss ad_rss_map_integration
      after_script:
        - bash .github/.travis/code_coverage.sh
      after_failure:
        - tail --lines=2000 build.log

    - env: TEST="Build Documentation"
      addons:
        apt:
          packages:
          packages:
            - cmake
            - build-essential
            - lcov
            - doxygen
            - graphviz
            - python3
            - python3-pip
            - libboost-all-dev
            - libpugixml-dev
            - libproj-dev
            - libgtest-dev
      before_install:
        - git submodule update --init
        - pip3 install setuptools
        - pip install --user mkdocs>=1.0 markdown-include pymdown-extensions==6.2 pygments mdx_truly_sane_lists
      before_script:
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        - sudo apt-get update
        - sudo apt-get install python3-colcon-common-extensions
      script:
        - colcon build --executor sequential --packages-up-to ad_rss ad_rss_map_integration --cmake-args -DBUILD_APIDOC=ON
        - export PATH=$PATH:~/.local/lib/python2.7/site-packages/mkdocs/
        - mkdocs build
      after_failures:
        - tail --lines=2000 build.log

    - env: TEST="Check Code Formatting"
      addons:
        apt:
          packages:
            - clang-format-3.9
      script:
        - res=`find -iname *.cpp -o -iname *.hpp | xargs clang-format-3.9 -output-replacements-xml | grep -c "<replacement "`; if [ $res -ne 0 ]; then echo "Your code does not comply to clang-format"; exit 1; fi
      after_failure:
        - tail --lines=2000 build.log

    - env: TEST="Documentation Deployment"
      if: branch = master AND type != pull_request
      git:
        depth: false
      addons:
        apt:
          packages:
            - cmake
            - build-essential
            - lcov
            - doxygen
            - graphviz
            - python3
            - python3-pip
            - libboost-all-dev
            - libpugixml-dev
            - libproj-dev
            - libgtest-dev
      before_install:
        - git submodule update --init
        - pip3 install setuptools
        - pip install --user mkdocs>=1.0 markdown-include pymdown-extensions==6.2 pygments mdx_truly_sane_lists
      before_script:
        - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
        - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
        - sudo apt-get update
        - sudo apt-get install python3-colcon-common-extensions
      script:
        - colcon build --executor sequential --packages-packages-up-to ad_rss ad_rss_map_integration --cmake-args -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DBUILD_COVERAGE=ON -DBUILD_APIDOC=ON
        - colcon test --packages-select ad_rss ad_rss_map_integration
        - export PATH=$PATH:~/.local/lib/python2.7/site-packages/mkdocs/
        - mkdocs build
      after_script:
        - bash .github/.travis/code_coverage.sh
        - bash .github/.travis/deploy.sh
      after_failure:
        - tail --lines=2000 build.log

    - env:
        - TEST="Check Ubuntu 16.04"
        - SH="docker exec -t ubuntu bash -c"
      services:
        - docker
      sudo: true
      before_install:
        - git submodule update --init
        - docker run -d --name ubuntu -v $(pwd):/travis -w /travis ubuntu:xenial tail -f /dev/null
        - docker ps
      install:
        - $SH "apt-get update && apt-get -y -qq install build-essential pkg-config cmake clang git libboost-all-dev libpugixml-dev libproj-dev"
        - $SH "apt-get -y -qq install software-properties-common && add-apt-repository ppa:ubuntu-toolchain-r/test -y && apt-get update"
        - $SH "sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'"
        - $SH "apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654"
        - $SH "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python python-setuptools python-pip python3 python3-setuptools python3-pip python3-colcon-common-extensions castxml"
        - $SH "pip2 install --user pygccxml https://bitbucket.org/ompl/pyplusplus/get/1.8.1.zip"
        - $SH "pip3 install -U setuptools"
      script:
        - $SH "eval $BUILDCMD"
        - $SH "rm -rf log build install && export CC=/usr/bin/clang && export CXX=/usr/bin/clang++" && $SH "eval $BUILDCMD"
        - $SH "apt-get -y -qq remove clang && apt-get -y -qq install clang-6.0 g++-6 clang-5.0 g++-7"
        - $SH "rm -rf log build install && export CC=/usr/bin/gcc-6 && export CXX=/usr/bin/g++-6" && $SH "eval $BUILDCMD"
        - $SH "rm -rf log build install && export CC=/usr/bin/gcc-7 && export CXX=/usr/bin/g++-7" && $SH "eval $BUILDCMD"
        - $SH "rm -rf log build install && export CC=/usr/bin/clang-5.0 && export CXX=/usr/bin/clang++-5.0" && $SH "eval $BUILDCMD"
        - $SH "rm -rf log build install && export CC=/usr/bin/clang-6.0 && export CXX=/usr/bin/clang++-6.0" && $SH "eval $BUILDCMD"
      after_failure:
        - tail --lines=2000 build.log

    - env:
        - TEST="Check Ubuntu 18.04"
        - SH="docker exec -t ubuntu bash -c"
      services:
        - docker
      sudo: true
      before_install:
        - git submodule update --init
        - docker run -d --name ubuntu -v $(pwd):/travis -w /travis ubuntu:bionic tail -f /dev/null
        - docker ps
      install:
        - $SH "apt-get update && apt-get -y -qq install build-essential pkg-config cmake clang git libboost-all-dev libpugixml-dev libproj-dev"
        - $SH "sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'"
        - $SH "apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654"
        - $SH "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python python-setuptools python-pip python3 python3-setuptools python3-pip python3-colcon-common-extensions castxml"
        - $SH "pip2 install --user pygccxml https://bitbucket.org/ompl/pyplusplus/get/1.8.1.zip"
      script:
        - $SH "eval $BUILDCMD"
        - $SH "rm -rf build && export CC=/usr/bin/clang && export CXX=/usr/bin/clang++" && $SH "eval $BUILDCMD"
      after_failure:
        - tail --lines=2000 build.log

notifications:
  email: false
