name: Build and Test of AD-RSS Library

on:
  push:
    branches: master
  pull_request:
    branches: master

env:
  GTEST_OUTPUT: "xml:test_results"
  BUILDCMD: "colcon build --event-handlers console_direct+ --executor sequential --packages-up-to ad_rss ad_rss_map_integration --cmake-args -DBUILD_HARDENING=ON -DBUILD_TESTING=ON -DBUILD_PYTHON_BINDING=ON -DPYTHON_BINDING_VERSION=${PYTHON_BINDING_VERSION} && colcon test --event-handlers console_direct+ --packages-select ad_rss ad_rss_map_integration && colcon test-result"

jobs:
  ubuntu18job:
    name: Ubuntu 18.04
    runs-on: ubuntu-latest

    strategy:
      matrix:
       include:
         - compiler: gcc7
           EXTRA_PACKAGES: ""
           CC: ""
           CXX: ""
           PYTHON_BINDING_VERSION: "2.7"
         - compiler: gcc8
           EXTRA_PACKAGES: g++-8
           CC: /usr/bin/gcc-8
           CXX: /usr/bin/g++-8
           PYTHON_BINDING_VERSION: "3.6 -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3.6"
         - compiler: clang7
           EXTRA_PACKAGES: clang-7
           CC: /usr/bin/clang-7
           CXX: /usr/bin/clang++-7
           PYTHON_BINDING_VERSION: "3.6 -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3.6"
         - compiler: clang8
           EXTRA_PACKAGES: clang-8
           CC: /usr/bin/clang-8
           CXX: /usr/bin/clang++-8
           PYTHON_BINDING_VERSION: "3.6 -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3.6"

    container:
      image: ubuntu:18.04

    steps:
    - name: Install base packages
      run: apt update && apt install -y git sudo

    - uses: actions/checkout@v1
      with:
          depth: 
          submodules: recursive

    - name: Install Dependencies
      run: bash .github/workflows/install_dependencies.sh

    - name: Build and Test
      env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
          EXTRA_PACKAGES: ${{ matrix.EXTRA_PACKAGES }}
          PYTHON_BINDING_VERSION: ${{ matrix.PYTHON_BINDING_VERSION }}
      run: |
        sudo apt-get install -y ${EXTRA_PACKAGES}
        rm -rf log build install
        eval CC=${CC} CXX=${CXX} ${BUILDCMD}


  ubuntu20job:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04

    strategy:
      matrix:
       include:
         - compiler: gcc9
           EXTRA_PACKAGES: ""
           CC: ""
           CXX: ""
           PYTHON_BINDING_VERSION: "3.8"
         - compiler: clang10
           EXTRA_PACKAGES: clang-10
           CC: /usr/bin/clang-10
           CXX: /usr/bin/clang++-10
           PYTHON_BINDING_VERSION: "3.8"

    steps:
    - uses: actions/checkout@v2
      with:
          submodules: recursive

    - name: Install Dependencies
      run: bash .github/workflows/install_dependencies.sh

    - name: Build and Test
      env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
          EXTRA_PACKAGES: ${{ matrix.EXTRA_PACKAGES }}
          PYTHON_BINDING_VERSION: ${{ matrix.PYTHON_BINDING_VERSION }}
      run: |
        sudo apt-get install ${EXTRA_PACKAGES}
        rm -rf log build install
        eval CC=${CC} CXX=${CXX} ${BUILDCMD}

  ubuntu22job:
    name: Ubuntu 22.04
    runs-on: ubuntu-22.04

    strategy:
      matrix:
       include:
         - compiler: gcc11
           EXTRA_PACKAGES: ""
           CC: ""
           CXX: ""
           PYTHON_BINDING_VERSION: "3.10"
         - compiler: clang14
           EXTRA_PACKAGES: clang-14
           CC: /usr/bin/clang-14
           CXX: /usr/bin/clang++-14
           PYTHON_BINDING_VERSION: "3.10"

    steps:
    - uses: actions/checkout@v2
      with:
          submodules: recursive

    - name: Install Dependencies
      run: bash .github/workflows/install_dependencies.sh

    - name: Build and Test
      env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
          EXTRA_PACKAGES: ${{ matrix.EXTRA_PACKAGES }}
          PYTHON_BINDING_VERSION: ${{ matrix.PYTHON_BINDING_VERSION }}
      run: |
        sudo apt-get install ${EXTRA_PACKAGES}
        rm -rf log build install
        eval CC=${CC} CXX=${CXX} ${BUILDCMD}

