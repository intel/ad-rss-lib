name: Documentation

on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: read

jobs:
  documentationjob:
    permissions:
      contents: write

    runs-on: ubuntu-20.04

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
      with:
        egress-policy: audit

    - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install Dependencies
      run: |
        export BUILD_DOCU=true
        bash .github/workflows/install_dependencies.sh

    - name: Build Documentation and Test
      run: |
        GTEST_OUTPUT="xml:test_results"
        colcon build --event-handlers console_direct+ --executor sequential --packages-up-to ad_rss ad_rss_map_integration --cmake-args -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DBUILD_COVERAGE=ON -DBUILD_APIDOC=ON
        colcon test --event-handlers console_direct+ --packages-select ad_rss ad_rss_map_integration
        colcon test-result

    - name: Code Coverage and CodeCov
      run: |
        bash .github/workflows/code_coverage.sh

    - name: Upload coverage as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage_report
        path: ./coverage
        if-no-files-found: error
        overwrite: true

    - name: Documentation Deployment (Test)
      run: |
        mkdocs build
        if [ ${{ github.event_name }} != 'pull_request' ]; then bash .github/workflows/deploy_documentation.sh true; else bash .github/workflows/deploy_documentation.sh false; fi
