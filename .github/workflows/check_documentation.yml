name: Build and Test Documentation

on:
  push:
    branches: master
  pull_request:
    branches: master

permissions:
  contents: read

jobs:
  documentationjob:

    name: Build and Test Documentation
    runs-on: ubuntu-20.04

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
      with:
        egress-policy: audit

    - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Install Dependencies
      run: |
        bash .github/workflows/install_dependencies.sh
        sudo apt-get install doxygen graphviz lcov
        sudo pip3 install --upgrade six>=1.11.0
        sudo pip3 install Markdown==3.2.1
        sudo pip3 install mkdocs
        sudo pip3 install markdown-include
        sudo pip3 install pymdown-extensions==8.0.1
        sudo pip3 install pygments mdx_truly_sane_lists

    - name: Build Documentation and Test
      run: |
        GTEST_OUTPUT="xml:test_results"
        colcon build --event-handlers console_direct+ --executor sequential --packages-up-to ad_rss ad_rss_map_integration --cmake-args -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DBUILD_COVERAGE=ON -DBUILD_APIDOC=ON
        colcon test --event-handlers console_direct+ --packages-select ad_rss ad_rss_map_integration
        colcon test-result
        
    - name: Code Coverage and CodeCov
      run: |
        bash .github/workflows/code_coverage.sh

    - name: Documentation Deployment (Test)
      run: |
        mkdocs build
        if [ ${{ github.event_name }} != 'pull_request' ]; then bash .github/workflows/deploy_documentation.sh true; else bash .github/workflows/deploy_documentation.sh false; fi
